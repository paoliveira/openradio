apply plugin: 'com.android.application'
apply from: '../shared/constants.gradle'

android {
    compileSdkVersion project.ext.compileSdkVersion
    buildToolsVersion project.ext.buildToolsVersion

    def versionPropsFile = file('version.properties')
    def code = 1
    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        code = versionProps['VERSION_CODE'].toInteger()
    } else {
        throw new GradleException("Could not read version.properties !")
    }
    println "Version code:" + code

    // TODO: Move these two file readers to shared lib

    def signConfFile = file("../shared/sign.properties")
    def storeFileProp
    def aliasProp
    def pwdProp
    if (signConfFile.canRead()) {
        Properties signProps = new Properties()
        signProps.load(new FileInputStream(signConfFile))
        storeFileProp = signProps['file'].toString()
        aliasProp = signProps['alias'].toString()
        pwdProp = signProps['pwd'].toString()
    } else {
        throw new GradleException("Could not read sign.properties !")
    }

    final def crashlyticsApiKeyFile = file('../shared/crashlytics.properties')
    if (crashlyticsApiKeyFile.canRead()) {
        final Properties properties = new Properties()
        properties.load(new FileInputStream(crashlyticsApiKeyFile))
        def apiKey = properties['apiKey'].toString()
        println "Crashlytics API key " + apiKey

        project.ext.apiKey = apiKey
    } else {
        throw new GradleException("Could not read crashlytics.properties !")
    }

    signingConfigs {
        config {
            keyAlias aliasProp
            keyPassword pwdProp
            storeFile file(storeFileProp)
            storePassword pwdProp
        }
    }

    defaultConfig {
        applicationId project.ext.applicationId
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        versionCode code
        versionName project.ext.versionName

        manifestPlaceholders = [crashlytics_api_key: project.ext.apiKey]
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.config
        }
        release {
            signingConfig signingConfigs.config
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation project(':shared')
    implementation "androidx.leanback:leanback:1.0.0"
    implementation "com.google.android.material:material:$materialVersion"
}

tasks.whenTaskAdded { task ->
    if (task.name == "signReleaseBundle") {
        task.doLast() {
            println "Get And Increment Version code"

            def versionPropsFile = file('version.properties')
            if (versionPropsFile.canRead()) {
                Properties versionProps = new Properties()
                versionProps.load(new FileInputStream(versionPropsFile))
                def code = versionProps['VERSION_CODE'].toInteger() + 1
                versionProps['VERSION_CODE'] = code.toString()
                versionProps.store(versionPropsFile.newWriter(), null)

                println "Version code incremented to " + code
            } else {
                throw new GradleException("Could not read version.properties !")
            }
        }
    }
}
